@using Basecode.Data.ViewModels
@model LoginViewModel


@{
    ViewData["Title"] = "Login";
    Layout = "~/Views/Shared/_NoLayout.cshtml";
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="~/css/loginstyles.css" asp-append-version="true" />
</head>

<body>
    <section id="loginStyle">
        <div class="text-center">
            <div class="logInContainer">
                <div>
                    <h1>LOGIN</h1>

                    <form asp-controller="Login" asp-action="Login">

                    <div class="forUsername">
                        <label class="control-label"></label>
                        <input name="Username" asp-for="Username" placeholder="Username" class="username" />
                        <span asp-validation-for="Username" class="text-danger"></span>
                    </div>

                    <div class="forPassword">
                        <label class="control-label"></label>
                        <input type="password" name="Password" asp-for="Password" placeholder="Password" class="password" />
                            <span asp-validation-for="Password" class="text-danger"></span>
                    </div>

                    <div class="button-box">
                        <button class="forSubmit">LOGIN</button>
                    </div>

                        <div class="forNoAccount">
                            <label class="form-check-label" for="flexCheckDefault">
                                Don’t have an account yet? <a asp-controller="SignUp" asp-action="Index" style="color: red;"><u>Sign Up</u></a>
                            </label>
                            <br>
                            <br>
                            <label class="form-check-label" for="flexCheckDefault">
                                <a asp-controller="Home" asp-action="Index" style="color: red;"><u>Back to Home</u></a>
                            </label>
                        </div>

                        @section Scripts {
                            @{
                                await Html.RenderPartialAsync("_ValidationScriptsPartial");
                            }
                        }

                </form>
                    <div class="triangle"></div>
                    <div class="triangle1"></div>
            </div>
        </div>
        </div>
      </section>
</body>
</html>